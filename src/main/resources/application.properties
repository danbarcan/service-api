spring.datasource.platform = POSTGRESQL

spring.datasource.url = ${SPRING_DATASOURCE_URL}
spring.datasource.username = ${SPRING_DATASOURCE_USERNAME}
spring.datasource.password = ${SPRING_DATASOURCE_PASSWORD}

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.data=classpath:cars.sql, classpath:populate_db.sql
spring.datasource.initialization-mode = always
spring.datasource.continue-on-error=true

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

server.port= 5000

logging.level.root=info

## App Properties
app.jwtSecret = JWTSuperSecretKey
app.jwtExpirationInMs = 604800000

# SMTP Server properties
smtp.username = ${SMTP_USERNAME}
smtp.password = ${SMTP_PASSWORD}
smtp.host = ${SMTP_HOST}
smtp.port = ${SMTP_PORT}

spring.rabbitmq.addresses=${RABBITMQ_URL}
jsa.rabbitmq.queue=jsa.queue1
jsa.rabbitmq.exchange=jsa.direct1
jsa.rabbitmq.routingkey=jsa.routingkey1

mail.register=Salut, te-ai inregistrat cu succes pe Serviceul meu.
mail.job.new.user=Salut, ai creat o noua cerere pe Serviceul meu.
mail.job.new.service=Salut, o noua cerere care ar putea fi de interes a fost creata.
mail.offer.new=Salut, ai primit o noua oferta.
mail.offer.accepted=Salut, oferta ta a fost acceptata.
mail.offer.refused=Salut, utilizatorul a decis sa accepte o alta oferta.

spring.main.allow-bean-definition-overriding=true